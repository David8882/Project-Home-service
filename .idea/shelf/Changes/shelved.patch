Index: expenses_helper.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># import sqlite3\r\nimport tkinter as tk\r\nfrom tkinter import ttk, filedialog\r\nfrom tkcalendar import DateEntry, Calendar\r\n# from datetime import datetime\r\n# from reportlab.lib.pagesizes import A4\r\n# from reportlab.pdfgen import canvas\r\nfrom reportlab.pdfbase.ttfonts import TTFont\r\nfrom reportlab.pdfbase import pdfmetrics\r\npdfmetrics.registerFont(TTFont('Hebrew', 'NotoSansHebrew_Condensed-ExtraBold.ttf'))\r\nitems_months = ['', 'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר',\r\n                'דצמבר']\r\nitems = ['E1', 'E2', 'E3', 'E4', 'E5', 'E6', 'E7', 'E8', 'E9', 'E10', 'E11', 'G', 'F', 'F +G', '']\r\nitems2 = ['עמית סבג', \"יוסף ג'אנו\", 'אאידה בראודסקי', 'מתן ומור קדוש', 'נאמן משה', 'אילנה צבאג', 'מיטל נומה',\r\n          'עדי אברדם', 'טליה ויעקב עובדיה', 'פטריסיה',  'נעמי ויואל סבג', '', '', '', '']\r\n\r\n# יצירת מילון שמקשר בין items, items2, items_months\r\nitems_dict = dict(zip(items, items2))\r\n\r\n\r\nclass App(tk.Tk):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.frame_add_from = FrameAddForm(self)\r\n        self.frame_list = FrameList(self)\r\n        self.frame_resit = FrameResit(self)\r\n        self.frame_explor = FrameExplor(self)\r\n        self.title('ועד בית')\r\n        self.geometry('1540x850')\r\n        self.put_frames()\r\n\r\n    def put_frames(self):\r\n        self.frame_add_from.place(relx=0, rely=0, relwidth=0.5, relheight=0.5)\r\n        self.frame_list.place(relx=0.5, rely=0, relwidth=0.5, relheight=0.5)\r\n        self.frame_explor.place(relx=0, rely=0.5, relwidth=0.5, relheight=0.5)\r\n        self.frame_resit.place(relx=0.5, rely=0.5, relwidth=0.5, relheight=0.5)\r\n\r\n\r\nclass FrameAddForm(tk.Frame):\r\n    def __init__(self, parent):\r\n        super().__init__(parent)\r\n        self.put_widgets()\r\n        self.f_resit = tk.Entry(self, justify=tk.RIGHT)\r\n        self.l_resit = tk.Label(self, text=\":מספר קבלה\", font=\"Helvetica 14 bold\")\r\n        self.f_num_house = tk.Label(self, text=\":דירה\", font=\"Helvetica 14 bold\")\r\n        self.l_num_house = ttk.Combobox(self, values=items, state=\"readonly\")\r\n\r\n        self.f_dayp = tk.Label(self, text=\":יום\", font=\"Helvetica 14 bold\")\r\n        self.l_dayp = DateEntry(self, foreground='black', normalforeground='black',\r\n                                selectforeground='red', background='white',\r\n                                data_pattern='dd-mm-YYYY')\r\n\r\n        self.f_money_ = tk.Entry(self, justify=tk.RIGHT)\r\n        self.l_money_ = tk.Label(self, text=\":כמה שילם\", font=\"Helvetica 14 bold\")\r\n\r\n        self.f_why_ = tk.Entry(self, justify=tk.RIGHT)\r\n        self.l_why_ = tk.Label(self, text=\":עבור\", font=\"Helvetica 14 bold\")\r\n\r\n        self.f_months = ttk.Combobox(self, values=items_months, state=\"readonly\")\r\n        # submit button\r\n        # self.btn_submit = ttk.Button(self, text=\"הגשה\", command=form_submit)\r\n        # self.btn_delete = ttk.Button(self, text=\"מחיקה\", command=delete_row)\r\n\r\n    def put_widgets(self):\r\n        tk.Label(self, width=150, height=150, bg='green').pack(expand=True)\r\n\r\n        self.f_num_house = tk.Label(self, text=\":דירה\", font=\"Helvetica 14 bold\")\r\n        self.l_num_house = ttk.Combobox(self, values=items, state=\"readonly\")\r\n\r\n        self.f_dayp = tk.Label(self, text=\":יום\", font=\"Helvetica 14 bold\")\r\n        self.l_dayp = DateEntry(self, foreground='black', normalforeground='black',\r\n                                selectforeground='red', background='white',\r\n                                data_pattern='dd-mm-YYYY')\r\n\r\n        self.f_money_ = tk.Entry(self, justify=tk.RIGHT)\r\n        self.l_money_ = tk.Label(self, text=\":כמה שילם\", font=\"Helvetica 14 bold\")\r\n\r\n        self.f_why_ = tk.Entry(self, justify=tk.RIGHT)\r\n        self.l_why_ = tk.Label(self, text=\":עבור\", font=\"Helvetica 14 bold\")\r\n\r\n        self.f_months = ttk.Combobox(self, values=items_months, state=\"readonly\")\r\n        # l_months = tk.Label(frame_add_from, text=\":חודש\", font=\"Helvetica 14 bold\")\r\n        # כפתור הגשה\r\n        # self.btn_submit = ttk.Button(self, text=\"הגשה\", command=form_submit)\r\n        # self.btn_delete = ttk.Button(self, text=\"מחיקה\", command=delete_row)\r\n\r\n        self.f_resit.grid(row=0, column=0, sticky='w', padx=150, pady=10)\r\n        self.l_resit.grid(row=0, column=1, sticky='w', padx=10, pady=10)\r\n        self.f_num_house.grid(row=1, column=1, sticky='w', padx=10, pady=10)\r\n        self.l_num_house.grid(row=1, column=0, sticky='w', padx=150, pady=10)\r\n        self.f_dayp.grid(row=2, column=1, sticky='w', padx=10, pady=10)\r\n        self.l_dayp.grid(row=2, column=0, sticky='w', padx=150, pady=10)\r\n        self.f_money_.grid(row=3, column=0, sticky='w', padx=150, pady=10)\r\n        self.l_money_.grid(row=3, column=1, sticky='w', padx=10, pady=10)\r\n        self.f_why_.grid(row=4, column=0, sticky='w', padx=150, pady=10)\r\n        self.l_why_.grid(row=4, column=1, sticky='w', padx=10, pady=10)\r\n        self.f_months.grid(row=5, column=0, sticky='w', padx=150, pady=10)\r\n\r\n        self.btn_submit.grid(row=6, column=0, columnspan=1, sticky='n', padx=160, pady=10)\r\n        self.btn_delete.grid(row=6, column=1, columnspan=2, sticky='n', padx=10, pady=10)\r\n\r\n    # def form_submit(self):\r\n    #     selected_item = self.l_num_house.get()  # מקבל את ה-e1, e2 שנבחר\r\n    #\r\n    #     # מייבא את השם לפי הערך שנבחר ב-Combobox\r\n    #     name_ = items_dict.get(selected_item)\r\n    #     num_house = selected_item  # הקוד של הדירה הוא אותו קוד כמו ה-e1, e2\r\n    #\r\n    #     resit = self.f_resit.get()\r\n    #     if not resit:\r\n    #         resit = last_resit_to_now()\r\n    #\r\n    #     dayp = self.l_dayp.get()\r\n    #     dayp = datetime.strptime(dayp, '%m/%d/%y').strftime('%d/%m/%Y')\r\n    #     money_ = self.f_money_.get()\r\n    #     why_ = f' {f_why_.get()}  {f_months.get()}'\r\n    #     print(type(resit), type(num_house), type(name_), type(dayp), type(money_), type(why_))\r\n    #\r\n    #     insert_home = (resit, num_house, name_, dayp, money_, why_)\r\n    #\r\n    #     # Insert the new data into the database\r\n    #     with sqlite3.connect('C:/Users/jacki/PycharmProjects/python122/database.db') as db:\r\n    #         cursor = db.cursor()\r\n    #         query = \"\"\"INSERT INTO home(resit, house_number, name, dayp, money_, why)\r\n    #                    VALUES (?,?,?,?,?,?)\"\"\"\r\n    #         cursor.execute(query, insert_home)\r\n    #         db.commit()\r\n    #\r\n    #     update_table()  # Update the table with the new data\r\n    #\r\n    #     # Reset input fields after saving data\r\n    #     self.f_resit.delete(0, tk.END)  # Reset receipt field\r\n    #     self.l_num_house.set('')  # Reset combo box for house number\r\n    #     self.l_dayp.set_date(datetime.now())  # Reset date to today\r\n    #     self.f_money_.delete(0, tk.END)  # Reset money field\r\n    #     self.f_why_.delete(0, tk.END)  # Reset reason field\r\n\r\n\r\nclass FrameList(tk.Frame):\r\n    def __init__(self, parent):\r\n        super().__init__(parent)\r\n        self.put_widgets()\r\n\r\n    def put_widgets(self):\r\n        tk.Label(self, width=150, height=150, bg='blue').pack(expand=True)\r\n\r\n\r\nclass FrameResit(tk.Frame):\r\n    def __init__(self, parent):\r\n        super().__init__(parent)\r\n        self.put_widgets()\r\n\r\n    def put_widgets(self):\r\n        tk.Label(self, width=150, height=150, bg='yellow').pack(expand=True)\r\n\r\n\r\nclass FrameExplor(tk.Frame):\r\n    def __init__(self, parent):\r\n        super().__init__(parent)\r\n        self.put_widgets()\r\n\r\n    def put_widgets(self):\r\n        tk.Label(self, width=150, height=150, bg='red').pack(expand=True)\r\n\r\n\r\napp = App()\r\napp.mainloop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/expenses_helper.py b/expenses_helper.py
--- a/expenses_helper.py	(revision 209f03da5dda2cba59be984e6fcffc219087f633)
+++ b/expenses_helper.py	(date 1730412443865)
@@ -165,3 +165,5 @@
 
 app = App()
 app.mainloop()
+
+print('hello')
